# Generated by Django 4.2.13 on 2024-11-27 05:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Relations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('graph_structure', models.JSONField(blank=True, null=True)),
                ('ways_structure', models.JSONField(blank=True, null=True)),
                ('relations_name', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('basepoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='waste.basepoint')),
                ('generate_plastic', models.IntegerField(blank=True, null=True)),
                ('generate_glass', models.IntegerField(blank=True, null=True)),
                ('generate_bio_wastes', models.IntegerField(blank=True, null=True)),
                ('plastic', models.IntegerField(blank=True, null=True)),
                ('glass', models.IntegerField(blank=True, null=True)),
                ('bio_wastes', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('waste.basepoint',),
        ),
        migrations.CreateModel(
            name='WasteStorage',
            fields=[
                ('basepoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='waste.basepoint')),
                ('max_plastic', models.IntegerField(blank=True, default=0, null=True)),
                ('max_glass', models.IntegerField(blank=True, default=0, null=True)),
                ('max_bio_wastes', models.IntegerField(blank=True, default=0, null=True)),
                ('plastic', models.IntegerField(blank=True, default=0, null=True)),
                ('glass', models.IntegerField(blank=True, default=0, null=True)),
                ('bio_wastes', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('waste.basepoint',),
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.IntegerField(blank=True)),
                ('first_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_point', to='waste.basepoint')),
                ('relations', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='waste.relations')),
                ('second_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_point', to='waste.basepoint')),
            ],
        ),
        migrations.AddField(
            model_name='basepoint',
            name='relations',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='waste.relations'),
        ),
    ]
